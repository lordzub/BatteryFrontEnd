{"version":3,"sources":["$_lazy_route_resource lazy namespace object","src/app/app.component.html","src/app/battery-cards/battery-cards.component.html","src/app/login/login.component.html","src/app/machines/machines.component.html","src/app/tabel/tabel.component.html","src/app/toolbar/toolbar.component.html","node_modules/tslib/tslib.es6.js","src/app/app-routing.module.ts","src/app/app.component.css","src/app/app.component.ts","src/app/app.module.ts","src/app/auth-user.service.ts","src/app/batteries.service.ts","src/app/battery-cards/battery-cards.component.css","src/app/battery-cards/battery-cards.component.ts","src/app/login/login.component.css","src/app/login/login.component.ts","src/app/machines.service.ts","src/app/machines/machines.component.css","src/app/machines/machines.component.ts","src/app/tabel/tabel.component.css","src/app/tabel/tabel.component.ts","src/app/toolbar/toolbar.component.css","src/app/toolbar/toolbar.component.ts","src/environments/environment.ts","src/main.ts"],"names":[],"mappings":"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","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"\\n<app-toolbar></app-toolbar>\\n<!-- <tabel></tabel> -->\\n\\n\\n<router-outlet></router-outlet>\\n\"","export default \"<div class='grad'>\\n\\n    <!-- <input matInput class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"search\\\" [(ngModel)]=\\\"searchText\\\" autocomplete=\\\"off\\\" placeholder=\\\"Enter model\\\"> -->\\n\\n<mat-card>\\n    <span *ngIf=\\\"!CustomSearchBool\\\">\\n    <mat-label>Machine Search</mat-label>\\n    <br>\\n    <br>\\n\\n    <mat-form-field >\\n        <mat-label>Manufacturer</mat-label>\\n        <mat-select [formControl]=\\\"Modelss\\\" [(ngModel)]=\\\"USER_MAN\\\">\\n\\n    \\n        <mat-option (onSelectionChange)=\\\"changeMan($event)\\\" *ngFor=\\\"let oem of OEMS; \\\"[value]=\\\"oem\\\" >\\n          {{oem}}\\n        </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n    <mat-form-field *ngIf=\\\"USER_MAN\\\" >\\n        <mat-label>Equipment Category</mat-label>\\n        <mat-select [formControl]=\\\"Models\\\" [(ngModel)]=\\\"USER_CATEGORY\\\">\\n\\n    <!-- <span *ngFor=\\\"let cat of CatModels; \\\">\\n        <span *ngIf=\\\"cat.oem == USER_MAN\\\"> -->\\n        <mat-option (onSelectionChange)=\\\"changeCat($event)\\\" *ngFor=\\\"let c of CATS\\\" [value]=\\\"c\\\" >\\n          {{c}}\\n        </mat-option>\\n    <!-- </span>\\n    </span> -->\\n\\n        </mat-select>\\n      </mat-form-field>\\n\\n\\n      <mat-form-field *ngIf=\\\"USER_CATEGORY\\\" >\\n        <mat-label>Models</mat-label>\\n        <mat-select [formControl]=\\\"Model\\\"  [(ngModel)] = \\\"USERSEARCH\\\">\\n            <mat-option>Model</mat-option>\\n            <!-- <span *ngFor=\\\"let cat of CatModels; \\\">\\n                <span *ngIf=\\\"cat.oem == USER_MAN \\\">\\n\\n                    <span *ngFor=\\\"let c of cat.cat\\\">\\n                        \\n                     <span *ngIf=\\\"c == USER_CATEGORY\\\"> -->\\n\\n\\n                        \\n                         <span >\\n                        <mat-option *ngFor=\\\"let model of MODELS\\\"  [value]=\\\"model\\\" >\\n                            {{model}}\\n                          </mat-option>\\n\\n\\n                        </span>\\n                    <!-- </span>\\n                </span>\\n\\n            </span>\\n            </span> -->\\n        </mat-select>\\n      </mat-form-field>\\n      <span *ngFor=\\\"let ma of MACHINES\\\">\\n          <span *ngIf=\\\"USERSEARCH == ma.model\\\">\\n            <p>Voltage: {{ma.voltage}} V</p>\\n            <p>Capacity: {{ma.minCap}} Ah</p>\\n            <p>Energy: {{ma.energy}} kWh</p>\\n\\n            <p *ngIf=\\\"ma.width > 0\\\">Width: {{ma.width}} mm</p>\\n            <p *ngIf=\\\"ma.len > 0\\\">Length: {{ma.len}} mm</p>\\n            <p *ngIf=\\\"ma.height > 0\\\">Height: {{ma.height}} mm</p>\\n          </span>\\n        \\n\\n    </span>\\n</span>\\n<br>\\n<span *ngIf=\\\"!CustomSearchBool\\\">\\n <button mat-button (click) ='CustomSearchBool = !CustomSearchBool'>Custom search</button>\\n</span>\\n<span *ngIf=\\\"CustomSearchBool\\\">\\n    <button mat-button (click) ='CustomSearchBool = !CustomSearchBool'>Machine search</button>\\n   </span>\\n\\n <br>\\n <br>\\n<span *ngIf=\\\"CustomSearchBool\\\">\\n\\n<mat-form-field>\\n    <mat-label>Battery Voltage</mat-label>\\n    <input matInput  placeholder=\\\"48\\\" [(ngModel)]=\\\"customSearch.voltage\\\">\\n</mat-form-field>\\n\\n<mat-form-field>\\n<mat-label>Battery Capacity </mat-label>\\n<input matInput  placeholder=\\\"530\\\" [(ngModel)]=\\\"customSearch.capacity\\\">\\n</mat-form-field>\\n\\n<mat-form-field>\\n<mat-label>Battery Energy (kWh)</mat-label>\\n<input matInput  placeholder=\\\"40.8\\\" [(ngModel)]=\\\"customSearch.energy\\\">\\n</mat-form-field>\\n\\n<mat-form-field>\\n<mat-label>Width</mat-label>\\n<input matInput  placeholder=\\\"530\\\" [(ngModel)]=\\\"customSearch.width\\\">\\n</mat-form-field>\\n\\n<mat-form-field>\\n<mat-label>Length</mat-label>\\n<input matInput  placeholder=\\\"896\\\" [(ngModel)]=\\\"customSearch.len\\\">\\n</mat-form-field>\\n\\n  \\n<mat-form-field>\\n<mat-label>Height</mat-label>\\n<input matInput  placeholder=\\\"530\\\" [(ngModel)]=\\\"customSearch.height\\\">\\n</mat-form-field>\\n</span>\\n\\n</mat-card>\\n\\n</div>\\n<div>\\n<!-- <mat-grid-list [cols]=5 rowHeight = '30rem'> -->\\n<span *ngIf=\\\"!CustomSearchBool\\\">\\n<span *ngIf=\\\"USERSEARCH\\\">\\n\\n<span  *ngFor=\\\"let bat of Batteries; let i = index;\\\" class='batCards'>\\n        <mat-accordion *ngIf=\\\"CheckValid(bat)\\\" class = 'acc'>\\n            <mat-expansion-panel>\\n              <mat-expansion-panel-header>\\n                <mat-panel-title>\\n                    {{bat.name}}\\n                </mat-panel-title>\\n\\n              </mat-expansion-panel-header>\\n\\n              <p>\\n                Voltage: {{bat.voltage}} V\\n            </p>\\n\\n                <p>\\n                    Capacity: {{bat.capacity}} Ah\\n                </p>\\n\\n\\n                <p>\\n                    Energy:  {{bat.energy}} kWh\\n                </p>\\n\\n                <p>\\n                    Width: {{bat.width}} mm\\n                </p>\\n\\n                <p>\\n                    Length: {{bat.len}} mm\\n                </p>\\n\\n\\n                <p>\\n                    Height: {{bat.height}} mm\\n                </p>\\n\\n                <p>\\n                    Weight: {{bat.weight}} kg\\n                </p>\\n                    \\n\\n                <!-- <span *ngFor=\\\"let ma of MACHINES\\\">\\n                    <span *ngIf=\\\"USERSEARCH == ma.model\\\"> -->\\n                        <span *ngIf=\\\"(THISMACHINEWEIGHT - bat.weight)>0\\\">\\n                        <p>\\n                            Additonal Weight required: {{THISMACHINEWEIGHT - bat.weight}} kg\\n                        </p>\\n                    </span>\\n                    <!-- </span> -->\\n                <!-- </span> -->\\n            </mat-expansion-panel>\\n        </mat-accordion>\\n</span>\\n</span>\\n</span>\\n\\n</div>\\n\\n<span *ngIf=\\\"CustomSearchBool\\\">\\n<span *ngIf=\\\"checkCustomSearch()\\\" class =\\\"SpanClass\\\">\\n\\t<!-- <mat-grid-tile *ngFor=\\\"let bat of Batteries | filter:searchText; let i = index; \\\" > -->\\n<span  *ngFor=\\\"let bat of Batteries; let i = index;\\\">\\n        <mat-accordion *ngIf=\\\"ValidateCustomSearch(bat)\\\"  class = 'acc'>\\n            <mat-expansion-panel>\\n              <mat-expansion-panel-header>\\n                <mat-panel-title>\\n                    {{bat.name}}\\n                </mat-panel-title>\\n\\n              </mat-expansion-panel-header>\\n\\n              <p>\\n                Voltage: {{bat.voltage}} V\\n            </p>\\n\\n                <p>\\n                    Capacity: {{bat.capacity}} Ah\\n                </p>\\n\\n\\n                <p>\\n                    Energy:  {{bat.energy}} kWh\\n                </p>\\n\\n                <p>\\n                    Width: {{bat.width}} mm\\n                </p>\\n\\n                <p>\\n                    Length: {{bat.len}} mm\\n                </p>\\n\\n\\n                <p>\\n                    Height: {{bat.height}} mm\\n                </p>\\n\\n                <p>\\n                    Weight: {{bat.weight}} kg\\n                </p>\\n\\n\\n            </mat-expansion-panel>\\n        </mat-accordion>\\n\\n</span>\\n</span>\\n</span>\\n           \\n\\n\"","export default \"<div class = 'LoginCard'>\\n<mat-card >\\n    <mat-form-field class='LoginForm'>\\n        <mat-label>Username</mat-label>\\n        <input matInput [(ngModel)]=\\\"USERNAME\\\">\\n      </mat-form-field>\\n      \\n      <mat-form-field class='LoginForm'>\\n        <mat-label>Password</mat-label>\\n        <input matInput type=\\\"password\\\" [(ngModel)]=\\\"PASSWORD\\\">\\n      </mat-form-field>\\n\\n      <span class='LoginForm'>\\n      <button mat-button (click)='Login()' >Login</button>\\n    </span>\\n</mat-card>\\n</div>\"","export default \"<mat-card class = 'AddCard'>\\n\\n    <mat-card-title>\\n      <button mat-button (click)='ShowAdd= !ShowAdd' *ngIf=\\\"!ShowAdd\\\">\\n        Add New Machine\\n      </button>\\n  \\n      <button mat-button (click)='ShowAdd= !ShowAdd' *ngIf=\\\"ShowAdd\\\">\\n        Minimise\\n      </button>\\n    </mat-card-title>\\n  \\n  <span *ngIf=\\\"ShowAdd\\\">\\n    <mat-form-field>\\n      <mat-label>OEM</mat-label>\\n      <input matInput  placeholder=\\\"Doosan\\\" [(ngModel)]=\\\"AddMachineData.OEM\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field>\\n        <mat-label>Equipment catergory</mat-label>\\n        <input matInput  placeholder=\\\"Forklift\\\" [(ngModel)]=\\\"AddMachineData.catergory\\\" >\\n    </mat-form-field>\\n\\n\\n\\n    <mat-form-field>\\n        <mat-label>Model</mat-label>\\n        <input matInput  placeholder=\\\"B25S-5\\\" [(ngModel)]=\\\"AddMachineData.model\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field>\\n      <mat-label>Battery Voltage</mat-label>\\n      <input matInput  placeholder=\\\"48\\\" [(ngModel)]=\\\"AddMachineData.voltage\\\">\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <mat-label>Minimum Battery Capacity</mat-label>\\n    <input matInput  placeholder=\\\"530\\\" [(ngModel)]=\\\"AddMachineData.minCap\\\">\\n</mat-form-field>\\n\\n\\n<mat-form-field>\\n  <mat-label>Maximum Battery Capacity </mat-label>\\n  <input matInput  placeholder=\\\"530\\\" [(ngModel)]=\\\"AddMachineData.maxCap\\\">\\n</mat-form-field>\\n\\n<mat-form-field>\\n  <mat-label>Battery Energy (kWh)</mat-label>\\n  <input matInput  placeholder=\\\"40.8\\\" [(ngModel)]=\\\"AddMachineData.energy\\\">\\n</mat-form-field>\\n\\n<mat-form-field>\\n  <mat-label>Minimum Battery Weight (kg)</mat-label>\\n  <input matInput  placeholder=\\\"530\\\" [(ngModel)]=\\\"AddMachineData.minWeight\\\">\\n</mat-form-field>\\n\\n<mat-form-field>\\n<mat-label>Width</mat-label>\\n<input matInput  placeholder=\\\"530\\\" [(ngModel)]=\\\"AddMachineData.width\\\">\\n</mat-form-field>\\n\\n<mat-form-field>\\n<mat-label>Length</mat-label>\\n<input matInput  placeholder=\\\"896\\\" [(ngModel)]=\\\"AddMachineData.len\\\">\\n</mat-form-field>\\n\\n    \\n<mat-form-field>\\n<mat-label>Height</mat-label>\\n<input matInput  placeholder=\\\"530\\\" [(ngModel)]=\\\"AddMachineData.height\\\">\\n</mat-form-field>\\n\\n<span class='ver'>\\n<mat-checkbox [(ngModel)]=\\\"AddMachineData.verified\\\">Verified</mat-checkbox>\\n</span>\\n\\n    <button class=\\\"mat-raised-button\\\" (click)=\\\"addBattery()\\\">Add Machine</button>\\n  </span>\\n  </mat-card>\\n\\n  <mat-card class = 'AddCard' *ngIf=\\\"Update\\\">\\n\\n    <mat-card-title>\\n      Update\\n  \\n  \\n  \\n      <button mat-button (click)='Update= !Update' *ngIf=\\\"Update\\\">\\n        Close\\n      </button>\\n    </mat-card-title>\\n  \\n  <span *ngIf=\\\"Update\\\">\\n    <mat-form-field>\\n      <mat-label>OEM</mat-label>\\n      <input matInput  value={{UpdateData.OEM}} [(ngModel)] = \\\"UpdateData.OEM\\\">\\n    </mat-form-field>\\n  \\n  \\n    <mat-form-field>\\n      <mat-label>Catergory</mat-label>\\n      <input matInput  value={{UpdateData.catergory}} [(ngModel)] = \\\"UpdateData.catergory\\\">\\n    </mat-form-field>\\n  \\n    <mat-form-field>\\n      <mat-label>Model</mat-label>\\n      <input matInput  value={{UpdateData.model}} [(ngModel)] = \\\"UpdateData.model\\\">\\n    </mat-form-field>\\n\\n\\n    <mat-form-field>\\n      <mat-label>voltage</mat-label>\\n      <input matInput  value={{UpdateData.voltage}} [(ngModel)] = \\\"UpdateData.voltage\\\">\\n    </mat-form-field>\\n  \\n    <mat-form-field>\\n      <mat-label>Minimum Battery Capacity</mat-label>\\n      <input matInput  value={{UpdateData.minCap}} [(ngModel)] = \\\"UpdateData.minCap\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field>\\n      <mat-label>Maximim Battery Capacity</mat-label>\\n      <input matInput  value={{UpdateData.maxCap}} [(ngModel)] = \\\"UpdateData.maxCap\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field>\\n      <mat-label>Energy</mat-label>\\n      <input matInput  value={{UpdateData.energy}} [(ngModel)] = \\\"UpdateData.energy\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field>\\n      <mat-label>Minimum Weight</mat-label>\\n      <input matInput  value={{UpdateData.minWeight}} [(ngModel)] = \\\"UpdateData.minWeight\\\">\\n    </mat-form-field>\\n  \\n    <mat-form-field>\\n      <mat-label>Width</mat-label>\\n      <input matInput  value={{UpdateData.width}} [(ngModel)] = \\\"UpdateData.width\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field>\\n      <mat-label>Length (mm)</mat-label>\\n      <input matInput  value={{UpdateData.len}} [(ngModel)] = \\\"UpdateData.len\\\">\\n    </mat-form-field>\\n  \\n    <mat-form-field>\\n      <mat-label>Height (mm)</mat-label>\\n      <input matInput  value={{UpdateData.height}} [(ngModel)] = \\\"UpdateData.height\\\">\\n    </mat-form-field>\\n\\n\\n    <span class='ver'>\\n      <mat-checkbox value={{UpdateData.verified}} [(ngModel)]=\\\"UpdateData.verified\\\">Verified</mat-checkbox>\\n      </span>\\n\\n  \\n\\n\\n  \\n    <button class=\\\"mat-raised-button\\\" (click)='UpdateMachineData(UpdateData)'>Update</button>\\n  </span>\\n  </mat-card>\\n\\n\\n<mat-card>\\n<mat-form-field>\\n  <mat-label>Filter</mat-label>\\n  <input matInput (keyup)=\\\"applyFilter($event)\\\" >\\n</mat-form-field>\\n</mat-card>\\n    <table mat-table [dataSource]=\\\" dataSource\\\" class=\\\"mat-elevation-z8\\\">\\n    \\n  \\n      <ng-container matColumnDef=\\\"OEM\\\" >\\n        <th mat-header-cell *matHeaderCellDef> OEM </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.OEM}} </td>\\n      </ng-container>\\n      \\n      <ng-container matColumnDef=\\\"Catergory\\\">\\n        <th mat-header-cell *matHeaderCellDef> Equipment catergory </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.catergory}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"Model\\\">\\n        <th mat-header-cell *matHeaderCellDef> Model</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.model}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"voltage\\\">\\n      <th mat-header-cell *matHeaderCellDef> Voltage</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.voltage}} </td>\\n  </ng-container>\\n\\n\\n  <ng-container matColumnDef=\\\"minCap\\\">\\n    <th mat-header-cell *matHeaderCellDef> Minmum Battery Capacity</th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.minCap}} </td>\\n</ng-container>\\n\\n<ng-container matColumnDef=\\\"maxCap\\\">\\n  <th mat-header-cell *matHeaderCellDef> Maximum Battery Capacity</th>\\n  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.maxCap}} </td>\\n</ng-container>\\n\\n\\n<ng-container matColumnDef=\\\"Energy\\\">\\n  <th mat-header-cell *matHeaderCellDef> Energy (kWh) </th>\\n  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.energy}} </td>\\n</ng-container>\\n\\n<ng-container matColumnDef=\\\"minWeight\\\">\\n  <th mat-header-cell *matHeaderCellDef> Minimum Weight (kg) </th>\\n  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.minWeight}} </td>\\n</ng-container>\\n\\n<ng-container matColumnDef=\\\"Width\\\">\\n  <th mat-header-cell *matHeaderCellDef> Width(mm)</th>\\n  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.width}} </td>\\n</ng-container>\\n\\n<ng-container matColumnDef=\\\"Height\\\">\\n  <th mat-header-cell *matHeaderCellDef> Height (mm) </th>\\n  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.height}} </td>\\n</ng-container>\\n\\n      <ng-container matColumnDef=\\\"Length\\\">\\n          <th mat-header-cell *matHeaderCellDef> Length (mm) </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.len}} </td>\\n      </ng-container>\\n  \\n\\n\\n      <ng-container matColumnDef=\\\"verified\\\">\\n        <th mat-header-cell *matHeaderCellDef> Verified </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.verified}} </td>\\n    </ng-container>\\n\\n\\n  \\n      <ng-container matColumnDef=\\\"UpdateButtons\\\">\\n        <th mat-header-cell *matHeaderCellDef></th>\\n        <td mat-cell *matCellDef=\\\"let element; let i = index\\\"><button mat-button (click)= \\\"DisplayUpdateData(element)\\\">Update</button></td>\\n      </ng-container>\\n  \\n  \\n      <ng-container matColumnDef=\\\"DelButtons\\\">\\n        <th mat-header-cell *matHeaderCellDef></th>\\n        <td mat-cell *matCellDef=\\\"let element; let i = index\\\"><button mat-button (click)= deleteData(i)>Delete</button></td>\\n      </ng-container>\\n  \\n  \\n    \\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" class = 'TabelRow'></tr>\\n    </table>\\n\\n<mat-paginator [pageSizeOptions]=\\\"[25, 50, 100]\\\"></mat-paginator>\"","export default \"<mat-card class = 'AddCard'>\\n\\n  <mat-card-title>\\n    <button mat-button (click)='ShowAdd= !ShowAdd' *ngIf=\\\"!ShowAdd\\\">\\n      Add New Battery\\n    </button>\\n\\n    <button mat-button (click)='ShowAdd= !ShowAdd' *ngIf=\\\"ShowAdd\\\">\\n      Minimise\\n    </button>\\n  </mat-card-title>\\n\\n<span *ngIf=\\\"ShowAdd\\\">\\n  <mat-form-field>\\n    <mat-label>Name</mat-label>\\n    <input matInput  placeholder=\\\"P00001\\\" [(ngModel)]=\\\"AddBatteryData.name\\\">\\n  </mat-form-field>\\n\\n\\n  <mat-form-field>\\n    <mat-label>voltage (V)</mat-label>\\n    <input matInput  placeholder=\\\"26\\\" type=\\\"number\\\" [(ngModel)]=\\\"AddBatteryData.voltage\\\">\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <mat-label>Capacity (Ah)</mat-label>\\n    <input matInput  placeholder=\\\"144\\\" type=\\\"number\\\" [(ngModel)]=\\\"AddBatteryData.capacity\\\">\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <mat-label>Energy (kWh)</mat-label>\\n    <input matInput  placeholder=\\\"3.7\\\" type=\\\"number\\\" [(ngModel)]=\\\"AddBatteryData.energy\\\">\\n  </mat-form-field>\\n\\n\\n  <mat-form-field>\\n    <mat-label>Width (mm)</mat-label>\\n    <input matInput  placeholder=\\\"3.7\\\" type=\\\"number\\\" [(ngModel)]=\\\"AddBatteryData.width\\\">\\n  </mat-form-field>\\n\\n\\n  <mat-form-field>\\n    <mat-label>Length (mm)</mat-label>\\n    <input matInput  placeholder=\\\"3.7\\\" type=\\\"number\\\" [(ngModel)]=\\\"AddBatteryData.len\\\">\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <mat-label>Height (mm)</mat-label>\\n    <input matInput  placeholder=\\\"3.7\\\" type=\\\"number\\\" [(ngModel)]=\\\"AddBatteryData.height\\\">\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <mat-label>Weight (Kg)</mat-label>\\n    <input matInput  placeholder=\\\"34\\\" type=\\\"number\\\" [(ngModel)]=\\\"AddBatteryData.weight\\\">\\n  </mat-form-field>\\n\\n  <!-- <mat-form-field>\\n    <mat-label>Cell Weight(Kg)</mat-label>\\n    <input matInput  placeholder=\\\"30.4\\\" type=\\\"number\\\" [(ngModel)]=\\\"AddBatteryData.cellWeight\\\">\\n  </mat-form-field> -->\\n\\n\\n  \\n  <button class=\\\"mat-raised-button\\\" (click)=\\\"addBattery()\\\">Add</button>\\n\\n</span>\\n</mat-card>\\n\\n\\n\\n\\n\\n<mat-card class = 'AddCard' *ngIf=\\\"Update\\\">\\n\\n  <mat-card-title>\\n    Update\\n\\n\\n\\n    <button mat-button (click)='Update= !Update' *ngIf=\\\"Update\\\">\\n      Close\\n    </button>\\n  </mat-card-title>\\n\\n<span *ngIf=\\\"Update\\\">\\n  <mat-form-field>\\n    <mat-label>Name</mat-label>\\n    <input matInput  value={{UpdateData.name}} [(ngModel)] = \\\"UpdateData.name\\\">\\n  </mat-form-field>\\n\\n\\n  <mat-form-field>\\n    <mat-label>Voltage (V)</mat-label>\\n    <input matInput  value={{UpdateData.voltage}} [(ngModel)] = \\\"UpdateData.voltage\\\">\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <mat-label>Capacity (Ah)</mat-label>\\n    <input matInput  value={{UpdateData.capacity}} [(ngModel)] = \\\"UpdateData.capacity\\\">\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <mat-label>Energy (kWh)</mat-label>\\n    <input matInput  value={{UpdateData.energy}} [(ngModel)] = \\\"UpdateData.energy\\\">\\n  </mat-form-field>\\n\\n\\n  <mat-form-field>\\n    <mat-label>Width (mm)</mat-label>\\n    <input matInput  value={{UpdateData.width}} [(ngModel)] = \\\"UpdateData.width\\\">\\n  </mat-form-field>\\n\\n\\n  <mat-form-field>\\n    <mat-label>Length (mm)</mat-label>\\n    <input matInput  value={{UpdateData.len}} [(ngModel)] = \\\"UpdateData.len\\\">\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <mat-label>Height (mm)</mat-label>\\n    <input matInput  value={{UpdateData.height}} [(ngModel)] = \\\"UpdateData.height\\\">\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <mat-label>Weight (Kg)</mat-label>\\n    <input matInput value={{UpdateData.weight}} [(ngModel)] = \\\"UpdateData.weight\\\">\\n  </mat-form-field>\\n\\n  <!-- <mat-form-field>\\n    <mat-label>Cell Weight(Kg)</mat-label>\\n    <input matInput  value={{UpdateData.cellWeight}} [(ngModel)] = \\\"UpdateData.cellWeight\\\">\\n  </mat-form-field> -->\\n\\n\\n\\n\\n\\n  <button class=\\\"mat-raised-button\\\" (click)='UpdateBatData(UpdateData)'>Update</button>\\n</span>\\n</mat-card>\\n\\n\\n<mat-card>\\n  <table mat-table [dataSource]=\\\" dataSource\\\" class=\\\"mat-elevation-z8\\\">\\n  \\n\\n    <ng-container matColumnDef=\\\"name\\\" >\\n      <th mat-header-cell *matHeaderCellDef> Name </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\n    </ng-container>\\n  \\n\\n    <ng-container matColumnDef=\\\"description\\\">\\n      <th mat-header-cell *matHeaderCellDef> Battery Description </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.batteryDescription}} </td>\\n    </ng-container>\\n  \\n\\n    <ng-container matColumnDef=\\\"voltage\\\">\\n      <th mat-header-cell *matHeaderCellDef> Voltage </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.voltage}} </td>\\n    </ng-container>\\n  \\n\\n    <ng-container matColumnDef=\\\"capacity\\\">\\n      <th mat-header-cell *matHeaderCellDef> Capacity (Ah) </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.capacity}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"energy\\\">\\n        <th mat-header-cell *matHeaderCellDef> Energy (kWh) </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.energy}} </td>\\n    </ng-container>\\n\\n\\n    <ng-container matColumnDef=\\\"width\\\">\\n        <th mat-header-cell *matHeaderCellDef> Width (mm) </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.width}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"length\\\">\\n        <th mat-header-cell *matHeaderCellDef> Length (mm) </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.len}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"height\\\">\\n        <th mat-header-cell *matHeaderCellDef> Height (mm) </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.height}} </td>\\n    </ng-container>\\n\\n    \\n    <ng-container matColumnDef=\\\"weight\\\">\\n        <th mat-header-cell *matHeaderCellDef> Weight (kg) </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.weight}} </td>\\n    </ng-container>\\n\\n\\n\\n    \\n    <!-- <ng-container matColumnDef=\\\"cellWeight\\\">\\n        <th mat-header-cell *matHeaderCellDef> Cell weight (kg) </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.cellWeight}} </td>\\n    </ng-container> -->\\n\\n\\n\\n    <ng-container matColumnDef=\\\"UpdateButtons\\\">\\n      <th mat-header-cell *matHeaderCellDef></th>\\n      <td mat-cell *matCellDef=\\\"let element; let i = index\\\"><button mat-button (click)= \\\"DisplayUpdateData(dataSource[i])\\\">Update</button></td>\\n    </ng-container>\\n\\n\\n    <ng-container matColumnDef=\\\"DelButtons\\\">\\n      <th mat-header-cell *matHeaderCellDef></th>\\n      <td mat-cell *matCellDef=\\\"let element; let i = index\\\"><button mat-button (click)= deleteData(i)>Delete</button></td>\\n    </ng-container>\\n\\n\\n  \\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" class = 'TabelRow'></tr>\\n  </table>\\n\\n</mat-card>\\n\\n\\n\\n<app-machines></app-machines>\\n\"","export default \"<mat-toolbar color='white'>\\n    <mat-toolbar-row>\\n      <img src=\\\"assets/img/logo.png\\\" class  = 'Logo'>\\n      <span>\\n        <!-- <button mat-button routerLink=\\\"/products\\\">Products</button> -->\\n       \\n      </span>\\n      <span class='loginBtn'>\\n        <!-- <button mat-button routerLink=\\\"/login\\\">Login</button> -->\\n      </span>\\n    </mat-toolbar-row>\\n  </mat-toolbar>\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'balancellTabel';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TabelComponent } from './tabel/tabel.component';\nimport {MatTableModule} from '@angular/material/table';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatInputModule} from '@angular/material';\nimport { BatteryCardsComponent } from './battery-cards/battery-cards.component';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport { FormsModule } from '@angular/forms';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport { ToolbarComponent } from './toolbar/toolbar.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport {MatButtonModule} from '@angular/material/button';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {MatSelectModule} from '@angular/material/select';\nimport { MachinesComponent } from './machines/machines.component';\nimport { CommonModule } from '@angular/common';  \nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport { LoginComponent } from './login/login.component';\nimport { MatPaginatorModule } from '@angular/material';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\n\n\nconst appRoutes: Routes = [\n  { path: 'products', component: BatteryCardsComponent },\n  { path: 'addProducts', component: TabelComponent },\n  { path:'AdminLogin', component:LoginComponent},\n\n  { path: '',\n    redirectTo: '/products',\n    pathMatch: 'full'\n  },\n];\n\n\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TabelComponent,\n    BatteryCardsComponent,\n    ToolbarComponent,\n    MachinesComponent,\n    LoginComponent\n  ],\n  imports: [\n    RouterModule.forRoot(appRoutes),\n    BrowserModule,\n    MatButtonModule,\n    AppRoutingModule,\n    MatSelectModule,\n    NoopAnimationsModule,\n    MatPaginatorModule,\n    MatTableModule,\n    MatFormFieldModule,\n    MatInputModule,\n    HttpModule,\n    MatCardModule,\n    MatExpansionModule,\n    MatGridListModule,\n    FormsModule,\n    Ng2SearchPipeModule,\n    MatToolbarModule,\n    ReactiveFormsModule,\n    CommonModule,\n    MatProgressBarModule,\n    MatCheckboxModule\n    \n  ],\n  providers: [HttpModule],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthUserService {\n  url = '//127.0.0.1:8080/api/auth';\n  constructor(private http:Http) {\n    \n   }\n\n   Login(username, password)\n   {\n    return this.http.post(this.url, {username:username, password:password});\n\n   }\n}\n","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BatteriesService {\n  url = '//127.0.0.1:8080/api/battery';\n  constructor(private http:Http) {\n    \n   }\n  \n\n  getBatteries(){\n    return this.http.get(this.url)\n  }\n\n  addBattery(bat)\n  {\n    var cat = []\n    var models=[]\n    for (var num in bat.models)\n    {\n      if(!(bat.models[num].cat in cat))\n      {\n        cat.push(bat.models[num].cat)\n      }\n      for (var mo in bat.models[num].models){\n        models.push(bat.models[num].models[mo]) \n      }\n      \n    }\n    console.log('Cats',cat)\n    console.log('Models',models)\n\n    var battery = {\n      name: bat.name,\n      batteryDescription:bat.voltage+'V '+bat.capacity+'Ah '+bat.energy+'kWh',\n      voltage:bat.voltage,\n      capacity: bat.capacity,\n      energy: bat.energy,\n      width: bat.width,\n      len: bat.len,\n      height: bat.height,\n      weight: bat.weight,\n      cellWeight: bat.cellWeight,\n      categories: cat,\n      models: models\n    }\n    console.log(bat.voltage)\n    console.log('Adding Battery');\n    console.log('Battery Added');\n    return this.http.post(this.url, {battery});\n    \n\n  }\n\n  DelBat (id){\n    var deleteUrl = this.url+'/'+id;\n    return this.http.delete(deleteUrl);\n    \n\n  }\n\n  UpdateBat(bat)\n  {\n    var id = bat['_id'];\n    console.log(bat)\n    var cat = []\n    var models=[]\n    for (var num in bat.models)\n    {\n      if(!(bat.models[num].cat in cat))\n      {\n        cat.push(bat.models[num].cat)\n      }\n      for (var mo in bat.models[num].models){\n        models.push(bat.models[num].models[mo]) \n      }\n      \n    }\n    console.log('Cats',cat)\n    console.log('Models',models)\n\n    var battery = {\n      name: bat.name,\n      batteryDescription:bat.voltage+'V '+bat.capacity+'Ah '+bat.energy+'kWh',\n      voltage:bat.voltage,\n      capacity: bat.capacity,\n      energy: bat.energy,\n      width: bat.width,\n      len: bat.len,\n      height: bat.height,\n      weight: bat.weight,\n      cellWeight: bat.cellWeight,\n\n    }\n    var updateUrl = this.url+'/'+id;\n    return this.http.put(updateUrl,{battery});\n\n  }\n\n\n}\n","export default \" .mat-card{\\r\\n\\r\\n    border: 55px solid !important;\\r\\n  \\r\\n    border: #000 !important;\\r\\n    width:100%;\\r\\n    margin-bottom: 1rem;\\r\\n   }\\r\\n\\r\\n   .fkLifts{\\r\\n    display: inline-block;\\r\\n   }\\r\\n\\r\\n   .we{\\r\\n       margin: 0 0 0 0 ;\\r\\n   }\\r\\n\\r\\n   .card-title{\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n    -webkit-box-pack: center;\\r\\n            justify-content: center;\\r\\n   }\\r\\n\\r\\n   .TabelRow{\\r\\n    text-align: center;\\r\\n   }\\r\\n\\r\\n   .mat-cell {\\r\\n    text-align: center;\\r\\n    -webkit-box-pack:center;\\r\\n            justify-content:center; \\r\\n  }\\r\\n\\r\\n   .batCards{\\r\\n    display: inline-block;\\r\\n    margin-right: 0;\\r\\n    display: inline-flexbox;\\r\\n    position: relative;\\r\\n    overflow: inherit !important;\\r\\n    top: 0;\\r\\n    z-index: 1000;\\r\\n  }\\r\\n\\r\\n   .mat-expansion-panel {\\r\\n    overflow: inherit !important;\\r\\n    margin: 1rem, 1rem, 1rem, 1rem;\\r\\n}\\r\\n\\r\\n   .mat-expansion-panel-body {\\r\\n    overflow: auto;\\r\\n}\\r\\n\\r\\n   .mat-expansion-panel-header.mat-expanded {\\r\\n    position: relative;\\r\\n    top: 0;\\r\\n    z-index: 1000;\\r\\n}\\r\\n\\r\\n   .mat-form-field{\\r\\n  margin-right: 1rem;\\r\\n  margin: 1rem, 1rem, 1rem,1rem;\\r\\n}\\r\\n\\r\\n   .SpanClass{\\r\\n  margin: 0,0,0,0;\\r\\n}\\r\\n\\r\\n   .acc{\\r\\n  display: inline-block;\\r\\n\\r\\n  margin: 1rem, 1rem, 1rem,1rem;\\r\\n\\r\\n  position: relative;\\r\\n  overflow: inherit !important;\\r\\n  top: 0;\\r\\n  z-index: 1000;\\r\\n}\\r\\n\\r\\n   .html,body{\\r\\n  background-image: rgb(0,133,62);\\r\\n  background-size: 100% 100%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYmF0dGVyeS1jYXJkcy9iYXR0ZXJ5LWNhcmRzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkNBQUM7O0lBRUcsNkJBQTZCOztJQUU3Qix1QkFBdUI7SUFDdkIsVUFBVTtJQUNWLG1CQUFtQjtHQUNwQjs7R0FFQTtJQUNDLHFCQUFxQjtHQUN0Qjs7R0FHQTtPQUNJLGdCQUFnQjtHQUNwQjs7R0FFQTtJQUNDLG9CQUFhO0lBQWIsYUFBYTtJQUNiLHdCQUF1QjtZQUF2Qix1QkFBdUI7R0FDeEI7O0dBR0E7SUFDQyxrQkFBa0I7R0FDbkI7O0dBR0Q7SUFDRSxrQkFBa0I7SUFDbEIsdUJBQXNCO1lBQXRCLHNCQUFzQjtFQUN4Qjs7R0FHQTtJQUNFLHFCQUFxQjtJQUNyQixlQUFlO0lBQ2YsdUJBQXVCO0lBQ3ZCLGtCQUFrQjtJQUNsQiw0QkFBNEI7SUFDNUIsTUFBTTtJQUNOLGFBQWE7RUFDZjs7R0FFQTtJQUNFLDRCQUE0QjtJQUM1Qiw4QkFBOEI7QUFDbEM7O0dBRUE7SUFDSSxjQUFjO0FBQ2xCOztHQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLE1BQU07SUFDTixhQUFhO0FBQ2pCOztHQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLDZCQUE2QjtBQUMvQjs7R0FDQTtFQUNFLGVBQWU7QUFDakI7O0dBRUE7RUFDRSxxQkFBcUI7O0VBRXJCLDZCQUE2Qjs7RUFFN0Isa0JBQWtCO0VBQ2xCLDRCQUE0QjtFQUM1QixNQUFNO0VBQ04sYUFBYTtBQUNmOztHQUVBO0VBQ0UsK0JBQStCO0VBQy9CLDBCQUEwQjtBQUM1QiIsImZpbGUiOiJzcmMvYXBwL2JhdHRlcnktY2FyZHMvYmF0dGVyeS1jYXJkcy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiIC5tYXQtY2FyZHtcclxuXHJcbiAgICBib3JkZXI6IDU1cHggc29saWQgIWltcG9ydGFudDtcclxuICBcclxuICAgIGJvcmRlcjogIzAwMCAhaW1wb3J0YW50O1xyXG4gICAgd2lkdGg6MTAwJTtcclxuICAgIG1hcmdpbi1ib3R0b206IDFyZW07XHJcbiAgIH1cclxuXHJcbiAgIC5ma0xpZnRze1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICB9XHJcblxyXG5cclxuICAgLndle1xyXG4gICAgICAgbWFyZ2luOiAwIDAgMCAwIDtcclxuICAgfVxyXG5cclxuICAgLmNhcmQtdGl0bGV7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgIH1cclxuXHJcblxyXG4gICAuVGFiZWxSb3d7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgIH1cclxuXHJcbiAgXHJcbiAgLm1hdC1jZWxsIHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDpjZW50ZXI7IFxyXG4gIH1cclxuXHJcblxyXG4gIC5iYXRDYXJkc3tcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIG1hcmdpbi1yaWdodDogMDtcclxuICAgIGRpc3BsYXk6IGlubGluZS1mbGV4Ym94O1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgb3ZlcmZsb3c6IGluaGVyaXQgIWltcG9ydGFudDtcclxuICAgIHRvcDogMDtcclxuICAgIHotaW5kZXg6IDEwMDA7XHJcbiAgfVxyXG5cclxuICAubWF0LWV4cGFuc2lvbi1wYW5lbCB7XHJcbiAgICBvdmVyZmxvdzogaW5oZXJpdCAhaW1wb3J0YW50O1xyXG4gICAgbWFyZ2luOiAxcmVtLCAxcmVtLCAxcmVtLCAxcmVtO1xyXG59XHJcblxyXG4ubWF0LWV4cGFuc2lvbi1wYW5lbC1ib2R5IHtcclxuICAgIG92ZXJmbG93OiBhdXRvO1xyXG59XHJcblxyXG4ubWF0LWV4cGFuc2lvbi1wYW5lbC1oZWFkZXIubWF0LWV4cGFuZGVkIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHRvcDogMDtcclxuICAgIHotaW5kZXg6IDEwMDA7XHJcbn1cclxuXHJcbi5tYXQtZm9ybS1maWVsZHtcclxuICBtYXJnaW4tcmlnaHQ6IDFyZW07XHJcbiAgbWFyZ2luOiAxcmVtLCAxcmVtLCAxcmVtLDFyZW07XHJcbn1cclxuLlNwYW5DbGFzc3tcclxuICBtYXJnaW46IDAsMCwwLDA7XHJcbn1cclxuXHJcbi5hY2N7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG5cclxuICBtYXJnaW46IDFyZW0sIDFyZW0sIDFyZW0sMXJlbTtcclxuXHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIG92ZXJmbG93OiBpbmhlcml0ICFpbXBvcnRhbnQ7XHJcbiAgdG9wOiAwO1xyXG4gIHotaW5kZXg6IDEwMDA7XHJcbn1cclxuXHJcbi5odG1sLGJvZHl7XHJcbiAgYmFja2dyb3VuZC1pbWFnZTogcmdiKDAsMTMzLDYyKTtcclxuICBiYWNrZ3JvdW5kLXNpemU6IDEwMCUgMTAwJTtcclxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport {BatteriesService} from '../batteries.service'\nimport {MachinesService} from '../machines.service'\nimport {FormControl} from '@angular/forms';\n\n\nexport interface CustomSearch{\n  voltage:number,\n  capacity:number, \n  energy:number,\n  width:number,\n  len:number,\n  height:number,\n}\n\n@Component({\n  selector: 'app-battery-cards',\n  templateUrl: './battery-cards.component.html',\n  styleUrls: ['./battery-cards.component.css']\n})\n\n\n\nexport class BatteryCardsComponent {\n  CustomSearchBool= false\n  customSearch: CustomSearch[]=[];\n  searchText;\n  USER_CATEGORY;\n  USERSEARCH;\n  USER_MAN;\n\n  THISMACHINEWEIGHT;\n  Machines = new FormControl();\n  Models = new FormControl();\n  Modelss = new FormControl();\n  Model = new FormControl();\n  constructor(public BS: BatteriesService,public MS: MachinesService) { \n    this.getMachines()\n  }\n  Batteries = [];\n  B=false;\n  Catergory =[]\n  CatModels =[]\n  MA=[];\n  ManU =[];\n  OEMS = [];\n  MACHINES=[];\n  MACHINE ={\n    man:String,\n    cat:[],\n    model:[]\n  };\n machines =[]\n CATS = []\n MODELS =[]\n\n\n  changeMan(event)\n  {\n    if(event.isUserInput) {\n      this.CATS =[]\n      for (var ma in this.machines){\n        if (event.source.value == this.machines[ma].OEM)\n        {\n          this.USER_MAN = event.source.value;\n          if (this.CATS.includes(this.machines[ma].catergory))\n          {\n              console.log(this.CATS)\n          }\n          else{\n            this.CATS.push(this.machines[ma].catergory)\n          }\n         \n        }\n      \n    }\n      this.USER_CATEGORY='';\n      this.USERSEARCH='';\n    }\n  }\n\n  changeCat(event)\n  {\n    \n    this.USERSEARCH='';\n    if(event.isUserInput) {\n      this.MODELS =[];\n      for (var ma in this.machines){\n\n        if (this.USER_MAN == this.machines[ma].OEM)\n        {\n          if (event.source.value == this.machines[ma].catergory)\n          {\n            \n            if (this.MODELS.includes(this.machines[ma].model))\n            {\n                console.log(this.MODELS)\n            }\n            else{\n              this.MODELS.push(this.machines[ma].model)\n            }\n          }\n        }\n        \n\n      \n    }\n    \n  }\n  }\n\n\n\n\n  SearchTest= false;\n\n  Bool = []\n\n  test = this.BS.getBatteries() .subscribe((data) =>{ \n\n    var bats= JSON.parse(data['_body'])\n \n\n    var Batteries = bats['batteries']\n\n\n    for (var bat in Batteries)\n    {\n      var battery = {\n        name: Batteries[bat]['name'],\n        batteryDescription:Batteries[bat]['batteryDescription'],\n        voltage:Batteries[bat]['voltage'],\n        capacity: Batteries[bat]['capacity'],\n        energy: Batteries[bat]['energy'],\n        width:Batteries[bat]['width'],\n        len:Batteries[bat]['len'],\n        height:Batteries[bat]['height'],\n        weight:Batteries[bat]['weight'],\n        cellWeight:Batteries[bat]['cellWeight'],\n        cat: Batteries[bat]['categories'],\n        models: Batteries[bat]['models'],\n\n      }\n      this.Bool.push(this.B);\n      this.Batteries.push(battery);\n}\n});\n\nShow(){\n  console.log(this.customSearch);\n  console.log(Object.keys(this.customSearch) );\n  var keys = Object.keys(this.customSearch)\n  console.log(this.customSearch[keys[0]])\n}\n\n\n\n\ncheckCustomSearch()\n{\n  if(Object.keys(this.customSearch).length > 0)\n  {\n    return true\n  }\n  else{\n    return false\n  }\n\n}\n\n\nValidateCustomSearch(bat)\n{\nvar correctCount = 0 \nvar totalCount=0\nvar batKeys = Object.keys(bat)\n\nvar keys = Object.keys(this.customSearch)\nfor (var keyNo in keys)\n{\n  console.log(this.customSearch['voltage'])\n  var SearchKey = keys[keyNo]\n\n  if (this.customSearch[SearchKey]!=''){\n    \n    totalCount+=1\n      if (SearchKey == 'voltage')\n      {\n\n        if (Math.abs(this.customSearch[SearchKey] - bat[SearchKey])<5)\n              {\n                \n                correctCount += 1\n\n            }\n      }\n      if (SearchKey == 'capacity')\n      {\n        if (this.customSearch[SearchKey]<= bat[SearchKey])\n              {\n                \n                correctCount += 1\n              }\n      }\n      if (SearchKey == 'energy')\n      {\n        if (this.customSearch[SearchKey]<= bat[SearchKey])\n              {\n\n                correctCount += 1\n                              }\n      }\n\n      if (SearchKey == 'height')\n      {\n        if (this.customSearch[SearchKey]>= bat[SearchKey])\n              {\n\n                correctCount += 1\n              }\n      }\n\n      if (SearchKey == 'len')\n      {\n        if (this.customSearch[SearchKey]>= bat[SearchKey])\n              {\n\n                correctCount += 1\n              }\n              if (this.customSearch[SearchKey]< bat[SearchKey] )\n              {\n                if(this.customSearch['width'] > bat['len'] && this.customSearch['len'] > bat['width']){\n                  correctCount += 1\n                  }\n                \n              }\n      }\n\n\n\n\n\n\n      if (SearchKey == 'width')\n      {\n        if (this.customSearch[SearchKey]>= bat[SearchKey] )\n              {\n                correctCount += 1\n              }\n\n\n              if (this.customSearch[SearchKey]< bat[SearchKey] )\n              {\n                if(this.customSearch['width'] > bat['len'] && this.customSearch['len'] > bat['width']){\n                  correctCount += 1\n                  }\n                \n              }\n            }\n  \n}\n\n  }\nif (correctCount==totalCount)\n  {\n return true\n  }\nelse\n  {\n return false\n  }\n}\n\nSortMachines(machines)\n{\n var test =[]\n  // console.log(machines)\n  for (var ma in machines){\n    // console.log(machines[ma].OEM)\n    var oem = machines[ma].OEM\n    var category = machines[ma].catergory\n    var model = machines[ma].model\n    \n\n    if(this.OEMS.indexOf(oem)==-1)\n    {\n      this.OEMS.push(oem)\n    }\n    // console.log(this.OEMS)\n  }\n\n}\ngetMachines()\n{ var a \n \n  this.MS.getMachines().subscribe((data)=>{\n    var machineData=JSON.parse(data['_body'])\n     a = machineData['machines']\n     for (var ma in a){\n       this.machines.push(a[ma])\n       this.MACHINES.push(a[ma])\n     }\n     this.SortMachines(this.machines)\n\n  })\n    \n}\n\nCheckValid(Bat)\n{\n  var FractionOfCapacity = 1/3\n  \n  var counter = 0\n  // console.log(this.MACHINES)\n  for (var ma in this.MACHINES)\n  {\n    var totalCount = 0\n    \n    // counter +=1;\n    // console.log(counter)\n    if (this.machines[ma].model ==this.USERSEARCH)\n    {\n      this.THISMACHINEWEIGHT =this.machines[ma].minWeight\n\n\n\nif (Math.abs(this.machines[ma].voltage - Bat.voltage)<5)\n{\n  totalCount +=1;\n  // console.log('Voltage meets requirments')\n}\n// console.log(' ');\n// console.log('Comapring height: ', this.MACHINES[ma].height , Bat.height );\nif (Number(this.machines[ma].height)> Number(Bat.height))\n{\n  totalCount +=1;\n  // console.log('Height meets requirments')\n}\n\n\n// console.log(' ');\n// console.log('Comapring Width: ', this.MACHINES[ma].width , Bat.width );\nif (Number(this.machines[ma].width) > Number(Bat.width)  )\n{\n  // console.log('Width meets requirments')\n  totalCount +=1;\n}\n\nif (this.machines[ma].width < Bat.width  )\n{\n  if(this.machines[ma].width > Bat.len && this.MACHINES[ma].len > Bat.width){\n  totalCount +=1;\n  }\n}\n// console.log(' ');\n// console.log('Comapring Length: ', this.MACHINES[ma].len , Bat.len );\nif (Number(this.machines[ma].len) > Number(Bat.len) )\n{\n \n  totalCount +=1;\n  // console.log('Length meets requirments')\n}\n\n\n\nif (this.machines[ma].minCap*FractionOfCapacity < Bat.capacity)\n{\n  totalCount +=1;\n}\n\nif (totalCount ==4) \n{\n  return true\n}\nif (totalCount !=4) \n{\n  return false\n}\n\n\n\n\n\n\n    }\n  }\n\n\n\n}\n}\n","export default \".LoginForm{\\r\\n    display:-webkit-box;\\r\\n    display:flex;\\r\\n    -webkit-box-pack: center;\\r\\n            justify-content: center;\\r\\n}\\r\\n\\r\\n.LoginCard{\\r\\n    \\r\\n    display: -webkit-box;\\r\\n    \\r\\n    display: flex;\\r\\n    -webkit-box-pack: center;\\r\\n            justify-content: center;\\r\\n    -webkit-box-align: center;\\r\\n            align-items: center;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLG1CQUFZO0lBQVosWUFBWTtJQUNaLHdCQUF1QjtZQUF2Qix1QkFBdUI7QUFDM0I7O0FBRUE7O0lBRUksb0JBQWE7O0lBQWIsYUFBYTtJQUNiLHdCQUF1QjtZQUF2Qix1QkFBdUI7SUFDdkIseUJBQW1CO1lBQW5CLG1CQUFtQjtBQUN2QiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuTG9naW5Gb3Jte1xyXG4gICAgZGlzcGxheTpmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbn1cclxuXHJcbi5Mb2dpbkNhcmR7XHJcbiAgICBcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport {AuthUserService} from '../auth-user.service';\nimport {Router} from \"@angular/router\"\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n\n  USERNAME;\n  PASSWORD;\n  constructor(private auth:AuthUserService,private router: Router) { }\n\n  ngOnInit() {\n  }\n\n\n  Login(){\n    this.auth.Login(this.USERNAME, this.PASSWORD).subscribe((data)=>\n    {\n\n      var ans = JSON.parse(data['_body'])\n      if (ans['message']=='Successful'){\n        this.router.navigate(['/addProducts'])\n      }\n    })\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MachinesService {\n\n  url = '//127.0.0.1:8080/api/machines';\n  constructor(private http:Http) {\n    \n   }\n  \n\n  getMachines():Observable<any>{\n    return this.http.get(this.url)\n  }\n\n  addMachine(Machine)\n  {\n\n\n    var machine = {\n      OEM: Machine.OEM,\n      catergory: Machine.catergory,\n      model: Machine.model,\n      voltage: Machine.voltage,\n      minCap:Machine.minCap,\n      maxCap:Machine.maxCap,\n      energy:Machine.energy,\n      minWeight:Machine.minWeight,\n      width:Machine.width,\n      len: Machine.len,\n      height: Machine.height,\n      verified: Machine.verified,\n      \n    }\n\n    console.log('Adding Battery');\n    console.log('Battery Added');\n    return this.http.post(this.url, {machine});\n    \n\n  }\n\n  DelMachine (id){\n    var deleteUrl = this.url+'/'+id;\n    return this.http.delete(deleteUrl);\n    \n\n  }\n\n  UpdateMachine(machine)\n  {\n    var id = machine['_id'];\n    console.log(machine)\n    var updateUrl = this.url+'/'+id;\n    return this.http.put(updateUrl,{machine});\n\n  }\n\n\n}\n","export default \"/* Structure */\\r\\ntable {\\r\\n    width: 100%;\\r\\n  }\\r\\n.mat-form-field {\\r\\n    font-size: 14px;\\r\\n    width: 14%;\\r\\n    margin: 0 1% 0 0;\\r\\n  }\\r\\n.mat-raised-button{\\r\\n    width: 10%;\\r\\n  }\\r\\n.mat-card{\\r\\n    margin-bottom: 1%;\\r\\n\\r\\n  }\\r\\n.ver{\\r\\n    margin-right: 1rem;\\r\\n  }\\r\\n.ng-container{\\r\\n    text-align: center;\\r\\n    -webkit-box-pack:center;\\r\\n            justify-content:center;\\r\\n    padding: 2rem 2rem 2rem 2rem;\\r\\n    width: 30rem;\\r\\n  }\\r\\n.mat-header-cell {\\r\\n    -webkit-box-orient: vertical;\\r\\n    -webkit-box-direction: normal;\\r\\n            flex-direction: column; \\r\\n   text-align: center;\\r\\n   -webkit-box-pack: center;\\r\\n           justify-content: center;\\r\\n   padding-right: 2rem;\\r\\n   width: 30rem;\\r\\n }\\r\\n.mat-cell {\\r\\n   text-align: center;\\r\\n   -webkit-box-pack:center;\\r\\n           justify-content:center;\\r\\n   padding-right: 2rem;\\r\\n   width: 30rem;\\r\\n }\\r\\ntd , th {\\r\\n   text-align: center;\\r\\n   -webkit-box-pack:center;\\r\\n           justify-content:center;\\r\\n   white-space: normal;\\r\\n   word-wrap: break-word;\\r\\n   max-width: 200px;\\r\\n}\\r\\n.mat-card{\\r\\n  width: auto;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFjaGluZXMvbWFjaGluZXMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxjQUFjO0FBQ2Q7SUFDSSxXQUFXO0VBQ2I7QUFFQTtJQUNFLGVBQWU7SUFDZixVQUFVO0lBQ1YsZ0JBQWdCO0VBQ2xCO0FBRUE7SUFDRSxVQUFVO0VBQ1o7QUFFQTtJQUNFLGlCQUFpQjs7RUFFbkI7QUFFQTtJQUNFLGtCQUFrQjtFQUNwQjtBQUVBO0lBQ0Usa0JBQWtCO0lBQ2xCLHVCQUFzQjtZQUF0QixzQkFBc0I7SUFDdEIsNEJBQTRCO0lBQzVCLFlBQVk7RUFDZDtBQUVBO0lBQ0UsNEJBQXNCO0lBQXRCLDZCQUFzQjtZQUF0QixzQkFBc0I7R0FDdkIsa0JBQWtCO0dBQ2xCLHdCQUF1QjtXQUF2Qix1QkFBdUI7R0FDdkIsbUJBQW1CO0dBQ25CLFlBQVk7Q0FDZDtBQUVBO0dBQ0Usa0JBQWtCO0dBQ2xCLHVCQUFzQjtXQUF0QixzQkFBc0I7R0FDdEIsbUJBQW1CO0dBQ25CLFlBQVk7Q0FDZDtBQUVBO0dBQ0Usa0JBQWtCO0dBQ2xCLHVCQUFzQjtXQUF0QixzQkFBc0I7R0FDdEIsbUJBQW1CO0dBQ25CLHFCQUFxQjtHQUNyQixnQkFBZ0I7QUFDbkI7QUFFQTtFQUNFLFdBQVc7QUFDYiIsImZpbGUiOiJzcmMvYXBwL21hY2hpbmVzL21hY2hpbmVzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBTdHJ1Y3R1cmUgKi9cclxudGFibGUge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG4gIFxyXG4gIC5tYXQtZm9ybS1maWVsZCB7XHJcbiAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICB3aWR0aDogMTQlO1xyXG4gICAgbWFyZ2luOiAwIDElIDAgMDtcclxuICB9XHJcblxyXG4gIC5tYXQtcmFpc2VkLWJ1dHRvbntcclxuICAgIHdpZHRoOiAxMCU7XHJcbiAgfVxyXG5cclxuICAubWF0LWNhcmR7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxJTtcclxuXHJcbiAgfVxyXG5cclxuICAudmVye1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAxcmVtO1xyXG4gIH1cclxuXHJcbiAgLm5nLWNvbnRhaW5lcntcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDpjZW50ZXI7XHJcbiAgICBwYWRkaW5nOiAycmVtIDJyZW0gMnJlbSAycmVtO1xyXG4gICAgd2lkdGg6IDMwcmVtO1xyXG4gIH1cclxuXHJcbiAgLm1hdC1oZWFkZXItY2VsbCB7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyBcclxuICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgcGFkZGluZy1yaWdodDogMnJlbTtcclxuICAgd2lkdGg6IDMwcmVtO1xyXG4gfVxyXG4gXHJcbiAubWF0LWNlbGwge1xyXG4gICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgIGp1c3RpZnktY29udGVudDpjZW50ZXI7XHJcbiAgIHBhZGRpbmctcmlnaHQ6IDJyZW07XHJcbiAgIHdpZHRoOiAzMHJlbTtcclxuIH1cclxuXHJcbiB0ZCAsIHRoIHtcclxuICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICBqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO1xyXG4gICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xyXG4gICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XHJcbiAgIG1heC13aWR0aDogMjAwcHg7XHJcbn1cclxuXHJcbi5tYXQtY2FyZHtcclxuICB3aWR0aDogYXV0bztcclxufSJdfQ== */\"","\nimport {Component,ViewChild,OnInit} from '@angular/core';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\n\nimport {MatTableDataSource} from '@angular/material/table';\nimport { Http } from '@angular/http';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport {BatteriesService} from '../batteries.service'\nimport {MachinesService} from '../machines.service'\nimport {FormControl} from '@angular/forms';\nimport { BatteryCardsComponent } from '../battery-cards/battery-cards.component';\n\n\nexport interface Machine{\n  OEM:String,\n  catergory: String,\n  model:String,\n  voltage:number,\n  minCap:number,\n  maxCap:number, \n  energy:number,\n  minWeight:number,\n  width:number,\n  len:number,\n  height:number,\n  verified:boolean\n  \n  \n}\n\n\n@Component({\n  selector: 'app-machines',\n  templateUrl: './machines.component.html',\n  styleUrls: ['./machines.component.css']\n})\nexport class MachinesComponent implements OnInit {\n\n \n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;dataSource: MatTableDataSource<Element>;\n  \n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n  Batteries = new FormControl();\n  BatteryNames=[];\n  data: any = null;\n  \n  ShowAdd = false;\n  Update = false;\n  UpdateData: Machine[]=[];\n\n \n  AddMachineData: Machine[] =[];\n\n\n\n  constructor(public http: Http, public BS: BatteriesService, public MS: MachinesService) {\n  this.getTableData()\n  this.getBats()\n\n\n    \n   }\n     ngOnInit() {\n    this.getTableData()\n\n  }\n\n   applyFilter(event: Event) {\n    var test = (event.target as HTMLInputElement).value\n    const filterValue = test.toString();\n\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  \n \n\n  displayedColumns: string[] = ['OEM', 'Catergory', 'Model', 'voltage','minCap','maxCap','Energy','minWeight','Width','Length','Height','verified','UpdateButtons', 'DelButtons'];\n  \n  addBattery()\n  {\n    console.log(this.AddMachineData);\n\n    this.MS.addMachine(this.AddMachineData).subscribe(data => \n      {\n        console.log(data);\n        this.getTableData();\n        for (var x in this.AddMachineData)\n        {\n          console.log( this.AddMachineData[x],x)\n          this.AddMachineData[x] =null;\n          \n        }\n \n        this.ShowAdd =!this.ShowAdd;\n    \n    \n    \n    });\n      \n\n  }\n  DisplayUpdateData(element){\n    this.Update = !this.Update;\n    console.log(element)\n    this.UpdateData = element;\n\n\n  }\n  deleteData(i)\n  {\n    // console.log(i);\n    var machineId = this.dataSource[i]['_id']\n    // console.log(this.dataSource[i]['_id'])\n    this.MS.DelMachine(machineId).subscribe(data => \n      {\n        // console.log(data);\n        this.getTableData();  \n    \n    \n    \n    });\n\n  }\n\n\n  UpdateMachineData(updateData)\n  {\n    console.log(updateData);\n\n    this.MS.UpdateMachine(updateData).subscribe(data=>{\n  \n      console.log(data)\n\n      for (var x in this.UpdateMachineData)\n      {\n        console.log( this.UpdateMachineData[x],x)\n        this.UpdateMachineData[x] =null;\n       \n      }\n\n      this.Update = !this.Update;\n    });\n\n  }\n\n\n\n\n  getTableData()\n  {\n    this.MS.getMachines() .subscribe((data) =>{ \n      var machineData = JSON.parse(data['_body'])\n      this.dataSource =  new MatTableDataSource(machineData['machines'])\n      this.dataSource.paginator = this.paginator;\n\n      \n        } );\n\n      }\n\n  getBats()\n  {\n    this.BS.getBatteries().subscribe((data) =>{ \n      var batteries = JSON.parse(data['_body'])\n      var bats = batteries['batteries']\n      for (var bat in bats){\n        this.BatteryNames.push(bats[bat].name)\n        // console.log(bats[bat].name)\n\n      }\n      // console.log(bats);\n        } );\n  }\n}\n","export default \"/* Structure */\\r\\ntable {\\r\\n    width: 100%;\\r\\n  }\\r\\n.mat-form-field {\\r\\n    font-size: 14px;\\r\\n    width: 15%;\\r\\n    margin: 0 1% 0 0;\\r\\n  }\\r\\n.mat-raised-button{\\r\\n    width: 15%;\\r\\n  }\\r\\n.mat-card{\\r\\n    margin-bottom: 1%;\\r\\n\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGFiZWwvdGFiZWwuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxjQUFjO0FBQ2Q7SUFDSSxXQUFXO0VBQ2I7QUFFQTtJQUNFLGVBQWU7SUFDZixVQUFVO0lBQ1YsZ0JBQWdCO0VBQ2xCO0FBRUE7SUFDRSxVQUFVO0VBQ1o7QUFFQTtJQUNFLGlCQUFpQjs7RUFFbkIiLCJmaWxlIjoic3JjL2FwcC90YWJlbC90YWJlbC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogU3RydWN0dXJlICovXHJcbnRhYmxlIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gIH1cclxuICBcclxuICAubWF0LWZvcm0tZmllbGQge1xyXG4gICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgd2lkdGg6IDE1JTtcclxuICAgIG1hcmdpbjogMCAxJSAwIDA7XHJcbiAgfVxyXG5cclxuICAubWF0LXJhaXNlZC1idXR0b257XHJcbiAgICB3aWR0aDogMTUlO1xyXG4gIH1cclxuXHJcbiAgLm1hdC1jYXJke1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMSU7XHJcblxyXG4gIH0iXX0= */\"","import {Component} from '@angular/core';\nimport {MatTableDataSource} from '@angular/material/table';\nimport { Http } from '@angular/http';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport {BatteriesService} from '../batteries.service'\nimport {FormControl} from '@angular/forms';\nimport {MachinesService} from '../machines.service'\nimport { BatteryCardsComponent } from '../battery-cards/battery-cards.component';\n\n\n\nexport interface Battery{\n  name: string;\n  batteryDescription:string;\n  voltage:number;\n  capacity: number;\n  energy: number;\n  width:number;\n  len:number;\n  height:number;\n  weight:number;\n  cellWeight:number;\n  \n}\n// const ELEMENT_DATA: Battery[] =[];\n\n/**\n * @title Table with filtering\n */\n@Component({\n  selector: 'tabel',\n  styleUrls: ['tabel.component.css'],\n  templateUrl: 'tabel.component.html',\n})\nexport class TabelComponent {\n  disableSelect = true;\n  Machines = new FormControl();\n  Models = new FormControl();\n  data: any = null;\n  dataSource =[];\n  ShowAdd = false;\n  Update = false;\n  UpdateData: Battery[]=[];\n  Catergory =[]\n  CatModels =[]\n\n \n  AddBatteryData: Battery[] =[];\n\n\n\n  constructor(public http: Http, public BS: BatteriesService, public MS: MachinesService) {\n  this.getTableData()    \n  this.getMachines()\n    \n   }\n\n\n  \n \n\n  displayedColumns: string[] = ['name', 'description', 'voltage', 'capacity','energy','width','length','height','weight','UpdateButtons','DelButtons'];\n  \n  addBattery()\n  {\n    console.log(this.AddBatteryData);\n    this.BS.addBattery(this.AddBatteryData).subscribe(data => \n      {\n        console.log(data);\n        this.getTableData();\n        for (var x in this.AddBatteryData)\n        {\n          console.log( this.AddBatteryData[x],x)\n          this.AddBatteryData[x] =null;\n          \n        }\n \n        this.ShowAdd =!this.ShowAdd;\n    \n    \n    \n    });\n      \n\n  }\n  DisplayUpdateData(Bat){\n    this.Update = !this.Update;\n    this.UpdateData = Bat;\n    \n\n\n  }\n  deleteData(i)\n  {\n    console.log(i);\n    var batId = this.dataSource[i]['_id']\n    console.log(this.dataSource[i]['_id'])\n    this.BS.DelBat(batId).subscribe(data => \n      {\n        console.log(data);\n        this.getTableData();  \n    \n    \n    \n    });\n\n  }\n\n  UpdateBatData(updateData)\n  {\n    console.log(updateData);\n\n    this.BS.UpdateBat(updateData).subscribe(data=>{\n  \n      console.log(data)\n\n      for (var x in this.UpdateBatData)\n      {\n        console.log( this.UpdateBatData[x],x)\n        this.UpdateBatData[x] =null;\n       \n      }\n\n      this.Update = !this.Update;\n      this.getTableData()\n    });\n\n  }\n\n\n\n\n  getTableData()\n  {\n    this.BS.getBatteries() .subscribe((data) =>{ \n      var batteryData = JSON.parse(data['_body'])\n      this.dataSource = batteryData['batteries']\n\n        } );\n\n  }\n \n\n  getMachines()\n  { var a = []\n    this.MS.getMachines().subscribe((data)=>{\n      var machineData=JSON.parse(data['_body'])\n      var machines = machineData['machines']\n      for (var ma in machines){\n      if(this.Catergory.indexOf(machines[ma].catergory)==-1){ \n        this.Catergory.push(machines[ma].catergory)\n      }\n      }\n      // console.log(this.Catergory)\n      for (var cat in this.Catergory){\n        // console.log(cat)\n        var temp = []\n        for (var ma in machines){\n          if (this.Catergory[cat]==machines[ma].catergory)\n          {\n            temp.push(machines[ma].model)\n          }\n          // console.log(temp)\n          \n        }\n\n\n\n        var test = {\n          cat: this.Catergory[cat],\n          models: temp\n        }\n\n        this.CatModels.push(test)\n      }\n      // console.log(this.CatModels)\n\n\n    })\n\n  }\n\n}\n","export default \".Logo{\\r\\n    height: 50px;\\r\\n    width: auto;\\r\\n    margin-bottom: 0;\\r\\n}\\r\\n\\r\\n.loginBtn{\\r\\n    position: absolute;\\r\\n    right: 2%;\\r\\n    margin: 0;\\r\\n  \\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdG9vbGJhci90b29sYmFyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0lBQ1osV0FBVztJQUNYLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixTQUFTO0lBQ1QsU0FBUzs7QUFFYiIsImZpbGUiOiJzcmMvYXBwL3Rvb2xiYXIvdG9vbGJhci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLkxvZ297XHJcbiAgICBoZWlnaHQ6IDUwcHg7XHJcbiAgICB3aWR0aDogYXV0bztcclxuICAgIG1hcmdpbi1ib3R0b206IDA7XHJcbn1cclxuXHJcbi5sb2dpbkJ0bntcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHJpZ2h0OiAyJTtcclxuICAgIG1hcmdpbjogMDtcclxuICBcclxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-toolbar',\n  templateUrl: './toolbar.component.html',\n  styleUrls: ['./toolbar.component.css']\n})\nexport class ToolbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///","file":"main-es5.js"}